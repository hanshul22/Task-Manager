{
    "openapi": "3.0.0",
    "info": {
        "title": "Task Manager API",
        "version": "1.0.0",
        "description": "A comprehensive Task Manager API with authentication, task CRUD operations, filtering, pagination, and advanced features like bulk operations and statistics.",
        "contact": {
            "name": "Task Manager API Support",
            "email": "support@taskmanager.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost:5000",
            "description": "Development server"
        },
        {
            "url": "https://api.taskmanager.com",
            "description": "Production server"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT authorization header using the Bearer scheme"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's full name",
                        "maxLength": 50
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email address"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Account creation timestamp"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                    }
                }
            },
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Task ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Task title",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "description": "Task description",
                        "maxLength": 1000
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in-progress",
                            "completed",
                            "cancelled"
                        ],
                        "description": "Task status"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "description": "Task priority level"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Task due date"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 30
                        },
                        "description": "Task tags for categorization"
                    },
                    "isCompleted": {
                        "type": "boolean",
                        "description": "Task completion status"
                    },
                    "completedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Task completion timestamp"
                    },
                    "user": {
                        "type": "string",
                        "description": "User ID who owns the task"
                    },
                    "isOverdue": {
                        "type": "boolean",
                        "description": "Whether the task is overdue"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Task creation timestamp"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                    }
                }
            },
            "RegisterRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's full name",
                        "maxLength": 50
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6,
                        "description": "User's password (minimum 6 characters)"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password"
                    }
                }
            },
            "UpdateProfileRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's full name",
                        "maxLength": 50
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email address"
                    }
                }
            },
            "ChangePasswordRequest": {
                "type": "object",
                "required": [
                    "currentPassword",
                    "newPassword"
                ],
                "properties": {
                    "currentPassword": {
                        "type": "string",
                        "description": "Current password"
                    },
                    "newPassword": {
                        "type": "string",
                        "minLength": 6,
                        "description": "New password (minimum 6 characters)"
                    }
                }
            },
            "CreateTaskRequest": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Task title",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "description": "Task description",
                        "maxLength": 1000
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in-progress",
                            "completed",
                            "cancelled"
                        ],
                        "default": "pending",
                        "description": "Task status"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "default": "medium",
                        "description": "Task priority level"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Task due date (must be in the future)"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 30
                        },
                        "description": "Task tags for categorization"
                    }
                }
            },
            "UpdateTaskRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Task title",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "description": "Task description",
                        "maxLength": 1000
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in-progress",
                            "completed",
                            "cancelled"
                        ],
                        "description": "Task status"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "description": "Task priority level"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Task due date"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 30
                        },
                        "description": "Task tags for categorization"
                    }
                }
            },
            "BulkUpdateRequest": {
                "type": "object",
                "required": [
                    "taskIds",
                    "updateData"
                ],
                "properties": {
                    "taskIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of task IDs to update"
                    },
                    "updateData": {
                        "$ref": "#/components/schemas/UpdateTaskRequest"
                    }
                }
            },
            "TaskStats": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "description": "Total number of tasks"
                    },
                    "overdue": {
                        "type": "integer",
                        "description": "Number of overdue tasks"
                    },
                    "byStatus": {
                        "type": "object",
                        "properties": {
                            "pending": {
                                "type": "integer"
                            },
                            "in-progress": {
                                "type": "integer"
                            },
                            "completed": {
                                "type": "integer"
                            },
                            "cancelled": {
                                "type": "integer"
                            }
                        },
                        "description": "Task count by status"
                    }
                }
            },
            "PaginationInfo": {
                "type": "object",
                "properties": {
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page number"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total number of pages"
                    },
                    "totalTasks": {
                        "type": "integer",
                        "description": "Total number of tasks"
                    },
                    "hasNextPage": {
                        "type": "boolean",
                        "description": "Whether there is a next page"
                    },
                    "hasPrevPage": {
                        "type": "boolean",
                        "description": "Whether there is a previous page"
                    }
                }
            },
            "SuccessResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "description": "Success message"
                    },
                    "data": {
                        "type": "object",
                        "description": "Response data"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Detailed error messages"
                    },
                    "statusCode": {
                        "type": "integer",
                        "description": "HTTP status code"
                    }
                }
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "description": "Check if the API is running",
                "responses": {
                    "200": {
                        "description": "API is running successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "version": {
                                                            "type": "string",
                                                            "example": "1.0.0"
                                                        },
                                                        "timestamp": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "description": "Create a new user account",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            },
                            "example": {
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "password": "password123"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user": {
                                                            "$ref": "#/components/schemas/User"
                                                        },
                                                        "token": {
                                                            "type": "string",
                                                            "description": "JWT access token"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or user already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return JWT token",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            },
                            "example": {
                                "email": "john.doe@example.com",
                                "password": "password123"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user": {
                                                            "$ref": "#/components/schemas/User"
                                                        },
                                                        "token": {
                                                            "type": "string",
                                                            "description": "JWT access token"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout user and blacklist the token",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "example": "Logged out successfully"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "description": "Get the profile of the currently authenticated user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user": {
                                                            "$ref": "#/components/schemas/User"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update user profile",
                "description": "Update the profile of the currently authenticated user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            },
                            "example": {
                                "name": "John Smith",
                                "email": "john.smith@example.com"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user": {
                                                            "$ref": "#/components/schemas/User"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "description": "Change the password of the currently authenticated user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            },
                            "example": {
                                "currentPassword": "oldpassword123",
                                "newPassword": "newpassword123"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "example": "Password changed successfully"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or incorrect current password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "description": "Get all tasks for the authenticated user with filtering, sorting, and pagination",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by task status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "in-progress",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by task priority",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high",
                                "critical"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of tasks per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort by",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "createdAt",
                                "updatedAt",
                                "dueDate",
                                "priority",
                                "status",
                                "title"
                            ],
                            "default": "createdAt"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in task title and description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Filter by tags (comma-separated)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "overdue",
                        "in": "query",
                        "description": "Filter overdue tasks",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "tasks": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Task"
                                                            }
                                                        },
                                                        "pagination": {
                                                            "$ref": "#/components/schemas/PaginationInfo"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create new task",
                "description": "Create a new task for the authenticated user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskRequest"
                            },
                            "example": {
                                "title": "Complete project documentation",
                                "description": "Write comprehensive documentation for the API",
                                "priority": "high",
                                "dueDate": "2024-12-31T23:59:59.000Z",
                                "tags": [
                                    "documentation",
                                    "project",
                                    "api"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "task": {
                                                            "$ref": "#/components/schemas/Task"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/stats": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task statistics",
                "description": "Get task statistics for the authenticated user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "stats": {
                                                            "$ref": "#/components/schemas/TaskStats"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/bulk": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Bulk update tasks",
                "description": "Update multiple tasks at once",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUpdateRequest"
                            },
                            "example": {
                                "taskIds": [
                                    "64b2f9a1e8f9c123456789ab",
                                    "64b2f9a1e8f9c123456789ac"
                                ],
                                "updateData": {
                                    "status": "completed",
                                    "priority": "low"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tasks updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "modifiedCount": {
                                                            "type": "integer",
                                                            "description": "Number of tasks modified"
                                                        },
                                                        "matchedCount": {
                                                            "type": "integer",
                                                            "description": "Number of tasks matched"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get single task",
                "description": "Get a specific task by ID",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Task ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "task": {
                                                            "$ref": "#/components/schemas/Task"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task",
                "description": "Update a specific task by ID",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Task ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskRequest"
                            },
                            "example": {
                                "title": "Updated task title",
                                "status": "in-progress",
                                "priority": "high"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "task": {
                                                            "$ref": "#/components/schemas/Task"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid task ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "description": "Delete a specific task by ID (soft delete)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Task ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "example": "Task deleted successfully"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Health",
            "description": "Health check endpoints"
        },
        {
            "name": "Authentication",
            "description": "User authentication and profile management"
        },
        {
            "name": "Tasks",
            "description": "Task management operations"
        }
    ]
}